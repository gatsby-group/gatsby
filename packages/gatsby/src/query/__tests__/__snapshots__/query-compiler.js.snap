// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`actual compiling accepts identical fragment definitions 1`] = `
Map {
  "mockFile" => Object {
    "hash": "hash",
    "isHook": false,
    "isStaticQuery": false,
    "name": "mockFileQuery",
    "originalText": "query mockFileQuery {
           allPostsJson {
             nodes {
               ...PostsJsonFragment
             }
          }
        }

        fragment PostsJsonFragment on PostsJson {
          id
        }",
    "path": "mockFile",
    "text": "fragment PostsJsonFragment on PostsJson {
  id
}

query mockFileQuery {
  allPostsJson {
    nodes {
      ...PostsJsonFragment
    }
  }
}
",
  },
}
`;

exports[`actual compiling adds fragments from different documents 1`] = `
Object {
  "hash": "hash",
  "isHook": false,
  "isStaticQuery": false,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 ...PostsJsonFragment
               }
            }
          }",
  "path": "mockFile",
  "text": "fragment PostsJsonFragment on PostsJson {
  id
}

query mockFileQuery {
  allPostsJson {
    nodes {
      ...PostsJsonFragment
    }
  }
}
",
}
`;

exports[`actual compiling adds fragments from same documents 1`] = `
Object {
  "hash": "hash",
  "isHook": false,
  "isStaticQuery": false,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 ...PostsJsonFragment
               }
            }
          }

          fragment PostsJsonFragment on PostsJson {
            id
          }",
  "path": "mockFile",
  "text": "fragment PostsJsonFragment on PostsJson {
  id
}

query mockFileQuery {
  allPostsJson {
    nodes {
      ...PostsJsonFragment
    }
  }
}
",
}
`;

exports[`actual compiling compiles a query 1`] = `
Object {
  "hash": "hash",
  "isHook": false,
  "isStaticQuery": false,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 id
               }
            }
          }",
  "path": "mockFile",
  "text": "query mockFileQuery {
  allPostsJson {
    nodes {
      id
    }
  }
}
",
}
`;

exports[`actual compiling compiles static query 1`] = `
Object {
  "hash": "hash",
  "id": Any<String>,
  "isHook": undefined,
  "isStaticQuery": true,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 id
               }
            }
          }",
  "path": "mockFile",
  "text": "query mockFileQuery {
  allPostsJson {
    nodes {
      id
    }
  }
}
",
}
`;

exports[`actual compiling errors on double root 1`] = `
Array [
  Object {
    "context": Object {
      "afterCodeFrame": "[0m [90m 1 | [39mquery anotherQueryAndMockFileQuery {[0m
[0m [90m 2 | [39m  allPostsJson {[0m
[0m [90m 3 | [39m    [33m#[39m[33m...[39m[0m
[0m [90m 4 | [39m  }[0m
[0m [90m 5 | [39m  allPostsJson {[0m
[0m [90m 6 | [39m    [33m#[39m[33m...[39m[0m
[0m [90m 7 | [39m  }[0m
[0m [90m 8 | [39m}[0m",
      "beforeCodeFrame": "[0m [90m  1 | [39mquery mockFileQuery {[0m
[0m [90m  2 | [39m  allPostsJson {[0m
[0m [90m  3 | [39m    [33m#[39m[33m...[39m[0m
[0m [90m  4 | [39m  }[0m
[0m [90m  5 | [39m}[0m
[0m [90m  6 | [39m[0m
[0m [90m  7 | [39mquery [33mAnotherQuery[39m {[0m
[0m [90m  8 | [39m  allPostsJson {[0m
[0m [90m  9 | [39m    [33m#[39m[33m...[39m[0m
[0m [90m 10 | [39m  }[0m
[0m [90m 11 | [39m}[0m",
      "name": "AnotherQuery",
      "otherName": "mockFileQuery",
    },
    "filePath": "mockFile",
    "id": "85910",
  },
]
`;

exports[`actual compiling errors on double root 2`] = `
Map {
  "mockFile" => Object {
    "hash": "hash",
    "isHook": false,
    "isStaticQuery": false,
    "name": "mockFileQuery",
    "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 id
               }
            }
          }

          query AnotherQuery {
            allPostsJson {
              nodes {
                id
              }
            }
          }",
    "path": "mockFile",
    "text": "query mockFileQuery {
  allPostsJson {
    nodes {
      id
    }
  }
}
",
  },
}
`;

exports[`actual compiling handles fragments that use other fragments 1`] = `
Object {
  "hash": "hash",
  "isHook": false,
  "isStaticQuery": false,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 ...PostsJsonFragment
               }
            }
          }",
  "path": "mockFile",
  "text": "fragment PostsJsonFragment on PostsJson {
  id
  ...AnotherPostsJsonFragment
}

fragment AnotherPostsJsonFragment on PostsJson {
  text
}

query mockFileQuery {
  allPostsJson {
    nodes {
      ...PostsJsonFragment
    }
  }
}
",
}
`;

exports[`actual compiling removes unused fragments from documents 1`] = `
Object {
  "hash": "hash",
  "isHook": false,
  "isStaticQuery": false,
  "name": "mockFileQuery",
  "originalText": "query mockFileQuery {
             allPostsJson {
               nodes {
                 ...PostsJsonFragment
               }
            }
          }

          fragment PostsJsonFragment on PostsJson {
            id
          }

          fragment UnusedFragment on PostsJson {
            id
          }",
  "path": "mockFile",
  "text": "fragment PostsJsonFragment on PostsJson {
  id
}

query mockFileQuery {
  allPostsJson {
    nodes {
      ...PostsJsonFragment
    }
  }
}
",
}
`;
